- name: prepare some dirs
  file: name={{ item }} state=directory
  with_items:
  - /etc/NetworkManager/conf.d/

- include_tasks: centos.yml
  when: ansible_os_family == "RedHat"

- name: Set timezone
  timezone: name="{{ TimeZone }}"
  when: TimeZone is defined

- name: get value for fs.file-max
  command: sysctl -n fs.file-max
  register: file_max
- name: set fs.file-max
  sysctl:
    name: fs.file-max
    value: "{{ fs_file_max }}"
    state: present
    reload: yes
    sysctl_set: yes
    sysctl_file: /etc/sysctl.conf
  when: 
    - file_max.stdout | int < fs_file_max

- name: 修改fstab文件关闭swap
  lineinfile:
    dest: /etc/fstab     
    regexp: "(^\\s*[^#].+swap)"
    line: '#\1'
    backrefs: yes
  when: not kubelet.swap

- name: 去掉 /tmp 目录的 noexec 选项 | 否则docker-compose运行会报错
  lineinfile:
    dest: /etc/fstab
    regexp: '(^\s*[^#].+?\s+/tmp\s+.+?)noexec(.+$)'
    line: '\1exec\2'
    backrefs: yes

- name: 分发modules-load,sysctl,NetworkManager的conf
  copy:
    src: files/{{ item.src }}
    dest: "{{ item.dest }}"
    mode: g=r,o=r
  with_items:
    - { src: 'k8s-ipvs.conf', dest: "/etc/modules-load.d/" }
    - { src: 'kubernetes.conf', dest: "/etc/security/limits.d/" }
    - { src: 'k8s-NetworkManager.conf', dest: "/etc/NetworkManager/conf.d/k8s.conf" }

- name: Send sysctl file
  template:
    src: k8s-sysctl.conf.j2
    dest: /etc/sysctl.d/k8s-sysctl.conf
    mode: g=r,o=r

- name: enable --now systemd-modules-load
  systemd: name=systemd-modules-load state=started enabled=yes


- include_tasks: time/chrony.yml
  when: ntp_type == "chrony"

- include_tasks: time/ntp.yml
  when: ntp_type != "chrony"

- name: 设置crond开机并启动
  systemd: name=crond enabled=yes


- name: 关闭sshd反向解析
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^#UseDNS"
    line: "UseDNS no"

- name: prepare some dirs
  file: name={{ item }} state=directory
  with_items:
  - /etc/kubernetes/pki
  - /etc/kubernetes/manifests
  - /var/log/kubernetes

- name: Set hostname
  hostname: name={{ hostname }}
  when: hostname is defined and hostname

- name: Reboot host
  shell: sleep 2 && shutdown -r now "reboot"
  async: 1
  poll: 0
  ignore_errors: yes
  tags:
    - reboot
